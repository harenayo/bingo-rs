use super::Card;

/// Tests whether `ready` and `complete` are calculated correctly.
#[test]
fn test() {
    #[allow(clippy::unusual_byte_groupings)]
    const CASES: [(u32, u32, u32); 9] = [
        (
            0b00000_00000_00000_00000_00000,
            0b00000_00000_00000_00000_00000,
            0b00000_00000_00000_00000_00000,
        ),
        (
            0b00000_00000_00000_00000_11111,
            0b00000_00000_00000_00000_00000,
            0b00000_00000_00000_00000_11111,
        ),
        (
            0b00000_00000_00000_00000_01111,
            0b00000_00000_00000_00000_11111,
            0b00000_00000_00000_00000_00000,
        ),
        (
            0b00001_00001_00001_00001_00001,
            0b00000_00000_00000_00000_00000,
            0b00001_00001_00001_00001_00001,
        ),
        (
            0b00001_00001_00000_00001_00001,
            0b00001_00001_00001_00001_00001,
            0b00000_00000_00000_00000_00000,
        ),
        (
            0b10000_01000_00100_00010_00001,
            0b00000_00000_00000_00000_00000,
            0b10000_01000_00100_00010_00001,
        ),
        (
            0b00001_00010_00100_01000_10000,
            0b00000_00000_00000_00000_00000,
            0b00001_00010_00100_01000_10000,
        ),
        (
            0b10001_01010_00000_01010_10001,
            0b10001_01010_00100_01010_10001,
            0b00000_00000_00000_00000_00000,
        ),
        (
            0b11111_00001_00000_00001_00001,
            0b00001_00001_00001_00001_00001,
            0b11111_00000_00000_00000_00000,
        ),
    ];

    for (marked, ready, complete) in CASES {
        assert_eq!(Card::new([0; 25], marked).info(), (ready, complete));
    }
}
